# Use an official Python runtime as a parent image
FROM python:slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y gcc libpcre3-dev && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt ./
RUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r requirements.txt

RUN mkdir /app/uwsgi/

COPY ./uwsgi/uwsgi.ini /app/uwsgi/uwsgi.ini

# Install uWSGI
RUN pip install uwsgi

# Copy the Django application into the container
# Make sure to copy as the last step to utilize Docker cache efficiently
COPY ./djangobackend .

# Run collectstatic command as root to collect static files
RUN python3 /app/manage.py collectstatic --noinput

# Change ownership of the app files to www-data for security and compliance with Docker best practices
RUN chown -R www-data:www-data /app

# Run the container as non-privileged user
USER www-data

# The CMD command is overridden by docker-compose, so you can specify a default one here if needed
# CMD ["uwsgi", "--ini", "/app/uwsgi/uwsgi.ini"]

